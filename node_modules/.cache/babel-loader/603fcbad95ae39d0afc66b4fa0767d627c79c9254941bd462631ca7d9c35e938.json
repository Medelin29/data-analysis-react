{"ast":null,"code":"var _jsxFileName = \"/home/liwia/scripts/personal/repositories/data-analysis-react/src/Scatterplot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Scatter } from 'react-chartjs-2';\nimport Slider from '@mui/material/Slider';\nimport { Chart as ChartJS, LinearScale, PointElement, Tooltip, Legend } from 'chart.js';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LinearScale, PointElement, Tooltip, Legend);\nfunction ScatterPlot() {\n  _s();\n  // Time-based data with points ordered chronologically (earliest to latest)\n  const initialData = [{\n    label: 'Dataset 1',\n    data: [{\n      x: 1,\n      y: 2\n    }, {\n      x: 1.5,\n      y: 2.3\n    }, {\n      x: 1.7,\n      y: 3\n    }, {\n      x: 2,\n      y: 2.1\n    }, {\n      x: 1.5,\n      y: 2.7\n    }, {\n      x: 2,\n      y: 1.1\n    }, {\n      x: 1,\n      y: 2.9\n    }],\n    backgroundColor: 'rgba(255, 99, 132, 1)' // Red color\n  }, {\n    label: 'Dataset 2',\n    data: [{\n      x: 2.5,\n      y: 2.5\n    }, {\n      x: 2.5,\n      y: 2\n    }, {\n      x: 2.6,\n      y: 2.9\n    }, {\n      x: 2.6,\n      y: 2.3\n    }, {\n      x: 2.4,\n      y: 3\n    }, {\n      x: 2.7,\n      y: 2.3\n    }, {\n      x: 3,\n      y: 2\n    }],\n    backgroundColor: 'rgba(54, 162, 235, 1)' // Blue color\n  }, {\n    label: 'Dataset 3',\n    data: [{\n      x: 4,\n      y: 1\n    }, {\n      x: 4.1,\n      y: 1.6\n    }, {\n      x: 4.2,\n      y: 1.5\n    }, {\n      x: 4.3,\n      y: 1.5\n    }, {\n      x: 4,\n      y: 2\n    }, {\n      x: 4.8,\n      y: 0.6\n    }, {\n      x: 4.8,\n      y: 1.9\n    }],\n    backgroundColor: 'rgba(75, 192, 192, 1)' // Green color\n  }];\n  const [scatterData, setScatterData] = useState(initialData);\n  const [sliderVisible, setSliderVisible] = useState(false);\n  const [sliderValue, setSliderValue] = useState(0);\n\n  // Calculate the max slider value based on the longest dataset length\n  const maxSliderValue = Math.max(...initialData.map(dataset => dataset.data.length - 1));\n\n  // Determine the min and max for x and y with padding\n  const xValues = initialData.flatMap(dataset => dataset.data.map(point => point.x));\n  const yValues = initialData.flatMap(dataset => dataset.data.map(point => point.y));\n  const padding = 1; // Adjust padding as needed\n\n  // Update scatterData to show only up to the current slider position\n  const updateScatterData = currentSliderValue => {\n    const updatedData = initialData.map(dataset => ({\n      ...dataset,\n      data: dataset.data.slice(0, currentSliderValue + 1) // Only include points up to the slider value\n    }));\n    setScatterData(updatedData);\n  };\n\n  // Toggle slider visibility\n  const toggleSlider = () => {\n    setSliderVisible(prev => !prev); // Toggle slider visibility state\n  };\n  const handleSliderChange = (event, newValue) => {\n    setSliderValue(newValue);\n    updateScatterData(newValue); // Update the scatter data when the slider moves\n  };\n  const chartOptions = {\n    scales: {\n      x: {\n        type: 'linear',\n        position: 'bottom',\n        beginAtZero: true,\n        min: Math.min(...xValues) - padding,\n        max: Math.max(...xValues) + padding\n      },\n      y: {\n        beginAtZero: true,\n        min: Math.min(...yValues) - padding,\n        max: Math.max(...yValues) + padding\n      }\n    },\n    onClick: (event, elements) => {\n      if (!elements.length) return;\n      const elementIndex = elements[0].datasetIndex;\n      const selectedGroupLabel = scatterData[elementIndex].label;\n      const updatedData = scatterData.map(dataset => ({\n        ...dataset,\n        backgroundColor: dataset.label === selectedGroupLabel ? dataset.backgroundColor : dataset.backgroundColor.replace('1)', '0.1)')\n      }));\n      setScatterData(updatedData);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"Scatter Plot with Time-based Slider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n      data: {\n        datasets: scatterData\n      },\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toggle-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"toggle-label\",\n        children: \"Toggle Slider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"oval-switch\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: sliderVisible,\n          onChange: toggleSlider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"track\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"thumb\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }, this), sliderVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider-container\",\n      children: /*#__PURE__*/_jsxDEV(Slider, {\n        value: sliderValue,\n        onChange: handleSliderChange,\n        \"aria-labelledby\": \"time-slider\",\n        min: 0,\n        max: maxSliderValue,\n        step: 1,\n        valueLabelDisplay: \"auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}\n_s(ScatterPlot, \"F7tWiTQZvrjSBQlMsmwTHTq6jT8=\");\n_c = ScatterPlot;\nexport default ScatterPlot;\nvar _c;\n$RefreshReg$(_c, \"ScatterPlot\");","map":{"version":3,"names":["React","useState","Scatter","Slider","Chart","ChartJS","LinearScale","PointElement","Tooltip","Legend","jsxDEV","_jsxDEV","register","ScatterPlot","_s","initialData","label","data","x","y","backgroundColor","scatterData","setScatterData","sliderVisible","setSliderVisible","sliderValue","setSliderValue","maxSliderValue","Math","max","map","dataset","length","xValues","flatMap","point","yValues","padding","updateScatterData","currentSliderValue","updatedData","slice","toggleSlider","prev","handleSliderChange","event","newValue","chartOptions","scales","type","position","beginAtZero","min","onClick","elements","elementIndex","datasetIndex","selectedGroupLabel","replace","className","children","fileName","_jsxFileName","lineNumber","columnNumber","datasets","options","checked","onChange","value","step","valueLabelDisplay","_c","$RefreshReg$"],"sources":["/home/liwia/scripts/personal/repositories/data-analysis-react/src/Scatterplot.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Scatter } from 'react-chartjs-2';\nimport Slider from '@mui/material/Slider';\nimport { Chart as ChartJS, LinearScale, PointElement, Tooltip, Legend } from 'chart.js';\nimport './App.css';\n\nChartJS.register(LinearScale, PointElement, Tooltip, Legend);\n\nfunction ScatterPlot() {\n    // Time-based data with points ordered chronologically (earliest to latest)\n    const initialData = [\n      {\n        label: 'Dataset 1',\n        data: [{ x: 1, y: 2 }, { x: 1.5, y: 2.3 }, { x: 1.7, y: 3 }, { x: 2, y: 2.1 }, { x: 1.5, y: 2.7 }, { x: 2, y: 1.1 }, { x: 1, y: 2.9 }],\n        backgroundColor: 'rgba(255, 99, 132, 1)', // Red color\n      },\n      {\n        label: 'Dataset 2',\n        data: [{ x: 2.5, y: 2.5 }, { x: 2.5, y: 2 }, { x: 2.6, y: 2.9 }, { x: 2.6, y: 2.3 }, { x: 2.4, y: 3 }, { x: 2.7, y: 2.3 }, { x: 3, y: 2 }],\n        backgroundColor: 'rgba(54, 162, 235, 1)', // Blue color\n      },\n      {\n        label: 'Dataset 3',\n        data: [{ x: 4, y: 1 }, { x: 4.1, y: 1.6 }, { x: 4.2, y: 1.5 }, { x: 4.3, y: 1.5 }, { x: 4, y: 2 }, { x: 4.8, y: 0.6 }, { x: 4.8, y: 1.9 }],\n        backgroundColor: 'rgba(75, 192, 192, 1)', // Green color\n      }\n    ];\n  \n    const [scatterData, setScatterData] = useState(initialData);\n    const [sliderVisible, setSliderVisible] = useState(false);\n    const [sliderValue, setSliderValue] = useState(0);\n\n    // Calculate the max slider value based on the longest dataset length\n    const maxSliderValue = Math.max(...initialData.map(dataset => dataset.data.length - 1));\n\n    // Determine the min and max for x and y with padding\n    const xValues = initialData.flatMap(dataset => dataset.data.map(point => point.x));\n    const yValues = initialData.flatMap(dataset => dataset.data.map(point => point.y));\n    const padding = 1; // Adjust padding as needed\n\n    // Update scatterData to show only up to the current slider position\n    const updateScatterData = (currentSliderValue) => {\n      const updatedData = initialData.map(dataset => ({\n        ...dataset,\n        data: dataset.data.slice(0, currentSliderValue + 1), // Only include points up to the slider value\n      }));\n      setScatterData(updatedData);\n    };\n\n    // Toggle slider visibility\n    const toggleSlider = () => {\n        setSliderVisible(prev => !prev); // Toggle slider visibility state\n    };\n\n    const handleSliderChange = (event, newValue) => {\n        setSliderValue(newValue);\n        updateScatterData(newValue); // Update the scatter data when the slider moves\n    };\n\n    const chartOptions = {\n      scales: {\n        x: {\n          type: 'linear',\n          position: 'bottom',\n          beginAtZero: true,\n          min: Math.min(...xValues) - padding,\n          max: Math.max(...xValues) + padding,\n        },\n        y: {\n          beginAtZero: true,\n          min: Math.min(...yValues) - padding,\n          max: Math.max(...yValues) + padding,\n        },\n      },\n      onClick: (event, elements) => {\n        if (!elements.length) return;\n        const elementIndex = elements[0].datasetIndex;\n        const selectedGroupLabel = scatterData[elementIndex].label;\n  \n        const updatedData = scatterData.map((dataset) => ({\n          ...dataset,\n          backgroundColor: dataset.label === selectedGroupLabel\n            ? dataset.backgroundColor\n            : dataset.backgroundColor.replace('1)', '0.1)'),\n        }));\n  \n        setScatterData(updatedData);\n      },\n    };\n  \n    return (\n        <div className=\"container\">\n          <h2 className=\"title\">Scatter Plot with Time-based Slider</h2>\n          <Scatter data={{ datasets: scatterData }} options={chartOptions} />\n    \n          {/* Toggle Slider Switch */}\n          <div className=\"toggle-container\">\n            <span className=\"toggle-label\">Toggle Slider</span>\n            <label className=\"oval-switch\">\n              <input type=\"checkbox\" checked={sliderVisible} onChange={toggleSlider} />\n              <span className=\"track\"></span>\n              <span className=\"thumb\"></span>\n            </label>\n          </div>\n    \n          {/* Conditionally Render Slider */}\n          {sliderVisible && (\n            <div className=\"slider-container\">\n              <Slider\n                value={sliderValue}\n                onChange={handleSliderChange}\n                aria-labelledby=\"time-slider\"\n                min={0}\n                max={maxSliderValue}\n                step={1}\n                valueLabelDisplay=\"auto\"\n              />\n            </div>\n          )}\n        </div>\n      );\n  }\n  \n  export default ScatterPlot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}