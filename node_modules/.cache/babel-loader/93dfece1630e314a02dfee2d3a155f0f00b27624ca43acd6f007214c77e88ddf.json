{"ast":null,"code":"var _jsxFileName = \"/home/liwia/scripts/personal/data-analysis/src/Scatterplot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Scatter } from 'react-chartjs-2';\nimport Slider from '@mui/material/Slider';\nimport { Chart as ChartJS, LinearScale, PointElement, Tooltip, Legend } from 'chart.js';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LinearScale, PointElement, Tooltip, Legend);\nfunction ScatterPlot() {\n  _s();\n  // Sample data representing four groups with two time snapshots each\n  const initialData = [{\n    label: 'Dataset 1 - Time 1',\n    data: [{\n      x: 1,\n      y: 2\n    }, {\n      x: 1.5,\n      y: 2.3\n    }, {\n      x: 1.7,\n      y: 3\n    }, {\n      x: 2,\n      y: 2.1\n    }, {\n      x: 1.5,\n      y: 2.7\n    }, {\n      x: 2,\n      y: 1.1\n    }, {\n      x: 1,\n      y: 2.9\n    }],\n    backgroundColor: 'rgba(255, 99, 132, 1)' // Red color\n  }, {\n    label: 'Dataset 1 - Time 2',\n    data: [{\n      x: 2.5,\n      y: 2.5\n    }, {\n      x: 2.5,\n      y: 2\n    }, {\n      x: 2.6,\n      y: 2.9\n    }, {\n      x: 2.6,\n      y: 2.3\n    }, {\n      x: 2.4,\n      y: 3\n    }, {\n      x: 2.7,\n      y: 2.3\n    }, {\n      x: 3,\n      y: 2\n    }],\n    backgroundColor: 'rgba(255, 99, 132, 0.5)' // Lighter Red\n  }, {\n    label: 'Dataset 2 - Time 1',\n    data: [{\n      x: 4,\n      y: 1\n    }, {\n      x: 4.1,\n      y: 1.6\n    }, {\n      x: 4.2,\n      y: 1.5\n    }, {\n      x: 4.3,\n      y: 1.5\n    }, {\n      x: 4,\n      y: 2\n    }, {\n      x: 4.8,\n      y: 0.6\n    }, {\n      x: 4.8,\n      y: 1.9\n    }],\n    backgroundColor: 'rgba(54, 162, 235, 1)' // Blue color\n  }];\n  const [scatterData, setScatterData] = useState(initialData);\n  const [sliderVisible, setSliderVisible] = useState(false);\n  const [sliderValue, setSliderValue] = useState(0);\n\n  // Determine the min and max for x and y with padding\n  const xValues = scatterData.flatMap(dataset => dataset.data.map(point => point.x));\n  const yValues = scatterData.flatMap(dataset => dataset.data.map(point => point.y));\n  const padding = 1; // Adjust padding as needed\n\n  // Highlight the dataset that contains the selected point\n  const handlePointClick = (event, elements) => {\n    if (!elements.length) return; // No element was clicked\n    const elementIndex = elements[0].datasetIndex; // Get the dataset index of the clicked point\n    const selectedGroupLabel = scatterData[elementIndex].label.split(' - ')[0]; // Extract group name\n\n    const updatedData = scatterData.map(dataset => {\n      const isSelectedGroup = dataset.label.startsWith(selectedGroupLabel);\n      return {\n        ...dataset,\n        backgroundColor: isSelectedGroup ? dataset.backgroundColor : dataset.backgroundColor.replace('1)', '0.1)'),\n        borderWidth: isSelectedGroup ? 2 : 0.5 // Thicker border for selected group\n      };\n    });\n    setScatterData(updatedData);\n  };\n\n  // Toggle slider visibility\n  const toggleSlider = () => {\n    setSliderVisible(prev => !prev); // Toggle slider visibility state\n  };\n  const handleSliderChange = (event, newValue) => {\n    setSliderValue(newValue); // Update slider value in state\n  };\n  const chartOptions = {\n    scales: {\n      x: {\n        type: 'linear',\n        position: 'bottom',\n        beginAtZero: true,\n        min: Math.min(...xValues) - padding,\n        max: Math.max(...xValues) + padding\n      },\n      y: {\n        beginAtZero: true,\n        min: Math.min(...yValues) - padding,\n        max: Math.max(...yValues) + padding\n      }\n    },\n    onClick: handlePointClick // Attach click handler to the chart\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"Scatter Plot with Toggleable Slider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n      data: {\n        datasets: scatterData\n      },\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toggle-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"toggle-label\",\n        children: \"Toggle Slider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"oval-switch\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: sliderVisible,\n          onChange: toggleSlider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"track\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"thumb\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }, this), sliderVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider-container\",\n      children: /*#__PURE__*/_jsxDEV(Slider, {\n        value: sliderValue,\n        onChange: handleSliderChange,\n        \"aria-labelledby\": \"time-slider\",\n        min: 0,\n        max: 10 // Adjust as needed\n        ,\n        step: 1,\n        valueLabelDisplay: \"auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n_s(ScatterPlot, \"F7tWiTQZvrjSBQlMsmwTHTq6jT8=\");\n_c = ScatterPlot;\nexport default ScatterPlot;\nvar _c;\n$RefreshReg$(_c, \"ScatterPlot\");","map":{"version":3,"names":["React","useState","Scatter","Slider","Chart","ChartJS","LinearScale","PointElement","Tooltip","Legend","jsxDEV","_jsxDEV","register","ScatterPlot","_s","initialData","label","data","x","y","backgroundColor","scatterData","setScatterData","sliderVisible","setSliderVisible","sliderValue","setSliderValue","xValues","flatMap","dataset","map","point","yValues","padding","handlePointClick","event","elements","length","elementIndex","datasetIndex","selectedGroupLabel","split","updatedData","isSelectedGroup","startsWith","replace","borderWidth","toggleSlider","prev","handleSliderChange","newValue","chartOptions","scales","type","position","beginAtZero","min","Math","max","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","datasets","options","checked","onChange","value","step","valueLabelDisplay","_c","$RefreshReg$"],"sources":["/home/liwia/scripts/personal/data-analysis/src/Scatterplot.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Scatter } from 'react-chartjs-2';\nimport Slider from '@mui/material/Slider';\nimport { Chart as ChartJS, LinearScale, PointElement, Tooltip, Legend } from 'chart.js';\nimport './App.css'\n\n\nChartJS.register(LinearScale, PointElement, Tooltip, Legend);\n\nfunction ScatterPlot() {\n    // Sample data representing four groups with two time snapshots each\n    const initialData = [\n      {\n        label: 'Dataset 1 - Time 1',\n        data: [{ x: 1, y: 2 }, { x: 1.5, y: 2.3 }, { x: 1.7, y: 3 }, { x: 2, y: 2.1 }, { x: 1.5, y: 2.7 }, { x: 2, y: 1.1 }, { x: 1, y: 2.9 }],\n        backgroundColor: 'rgba(255, 99, 132, 1)', // Red color\n      },\n      {\n        label: 'Dataset 1 - Time 2',\n        data: [{ x: 2.5, y: 2.5 }, { x: 2.5, y: 2 }, { x: 2.6, y: 2.9 }, { x: 2.6, y: 2.3 }, { x: 2.4, y: 3 }, { x: 2.7, y: 2.3 }, { x: 3, y: 2 }],\n        backgroundColor: 'rgba(255, 99, 132, 0.5)', // Lighter Red\n      },\n      {\n        label: 'Dataset 2 - Time 1',\n        data: [{ x: 4, y: 1 }, { x: 4.1, y: 1.6 }, { x: 4.2, y: 1.5 }, { x: 4.3, y: 1.5 }, { x: 4, y: 2 }, { x: 4.8, y: 0.6 }, { x: 4.8, y: 1.9 }],\n        backgroundColor: 'rgba(54, 162, 235, 1)', // Blue color\n      }\n    ];\n  \n    const [scatterData, setScatterData] = useState(initialData);\n    const [sliderVisible, setSliderVisible] = useState(false);\n    const [sliderValue, setSliderValue] = useState(0);\n\n     // Determine the min and max for x and y with padding\n    const xValues = scatterData.flatMap(dataset => dataset.data.map(point => point.x));\n    const yValues = scatterData.flatMap(dataset => dataset.data.map(point => point.y));\n    const padding = 1; // Adjust padding as needed\n  \n    // Highlight the dataset that contains the selected point\n    const handlePointClick = (event, elements) => {\n      if (!elements.length) return; // No element was clicked\n      const elementIndex = elements[0].datasetIndex; // Get the dataset index of the clicked point\n      const selectedGroupLabel = scatterData[elementIndex].label.split(' - ')[0]; // Extract group name\n  \n      const updatedData = scatterData.map((dataset) => {\n        const isSelectedGroup = dataset.label.startsWith(selectedGroupLabel);\n        return {\n          ...dataset,\n          backgroundColor: isSelectedGroup ? dataset.backgroundColor : dataset.backgroundColor.replace('1)', '0.1)'),\n          borderWidth: isSelectedGroup ? 2 : 0.5, // Thicker border for selected group\n        };\n      });\n  \n      setScatterData(updatedData);\n    };\n\n      // Toggle slider visibility\n    const toggleSlider = () => {\n        setSliderVisible(prev => !prev); // Toggle slider visibility state\n    };\n\n    const handleSliderChange = (event, newValue) => {\n        setSliderValue(newValue); // Update slider value in state\n    };\n  \n    const chartOptions = {\n      scales: {\n        x: {\n          type: 'linear',\n          position: 'bottom',\n          beginAtZero: true,\n          min: Math.min(...xValues) - padding,\n          max: Math.max(...xValues) + padding,\n        },\n        y: {\n          beginAtZero: true,\n          min: Math.min(...yValues) - padding,\n          max: Math.max(...yValues) + padding,\n        },\n      },\n      onClick: handlePointClick, // Attach click handler to the chart\n    };\n  \n    return (\n        <div className=\"container\">\n          <h2 className=\"title\">Scatter Plot with Toggleable Slider</h2>\n          <Scatter data={{ datasets: scatterData }} options={chartOptions} />\n    \n          {/* Toggle Slider Switch */}\n          <div className=\"toggle-container\">\n            <span className=\"toggle-label\">Toggle Slider</span>\n            <label className=\"oval-switch\">\n              <input type=\"checkbox\" checked={sliderVisible} onChange={toggleSlider} />\n              <span className=\"track\"></span>\n              <span className=\"thumb\"></span>\n            </label>\n          </div>\n    \n          {/* Conditionally Render Slider */}\n          {sliderVisible && (\n            <div className=\"slider-container\">\n              <Slider\n                value={sliderValue}\n                onChange={handleSliderChange}\n                aria-labelledby=\"time-slider\"\n                min={0}\n                max={10} // Adjust as needed\n                step={1}\n                valueLabelDisplay=\"auto\"\n              />\n            </div>\n          )}\n        </div>\n      );\n  }\n  \n  export default ScatterPlot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}