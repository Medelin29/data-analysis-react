{"ast":null,"code":"/*import React, { useState } from 'react';\nimport { Scatter } from 'react-chartjs-2';\nimport Slider from '@mui/material/Slider';\nimport { Chart as ChartJS, ScatterController, LinearScale, PointElement, Tooltip } from 'chart.js';\n\n// Register necessary Chart.js components\nChartJS.register(ScatterController, LinearScale, PointElement, Tooltip);\n\n// Example dataset (index 0 is the earliest, index n is the latest)\nconst data = [\n  { x: 1, y: 2 },\n  { x: 2, y: 3 },\n  { x: 3, y: 1 },\n  { x: 4, y: 5 },\n  { x: 5, y: 3 },\n  { x: 6, y: 4 },\n];\n\nfunction App() {\n   // Track the current time index for the slider\n   const [timeIndex, setTimeIndex] = useState(0);\n\n   // Update scatter plot data based on the current time index\n   const scatterData = {\n     datasets: [\n       {\n         label: 'Scatter Plot',\n         data: data.slice(0, timeIndex + 1), // Show points up to the selected time index\n         backgroundColor: 'rgba(75, 192, 192, 1)',\n       },\n     ],\n   };\n \n   const handleSliderChange = (event, newValue) => {\n     setTimeIndex(newValue);\n   };\n\n   return (\n    <div style={{ width: '600px', margin: '0 auto' }}>\n      <h2>Interactive Scatter Plot with Time Slider</h2>\n      <Scatter data={scatterData} options={{ scales: { x: { beginAtZero: true }, y: { beginAtZero: true } } }} />\n      <Slider\n        value={timeIndex}\n        onChange={handleSliderChange}\n        aria-labelledby=\"time-slider\"\n        step={1}\n        min={0}\n        max={data.length - 1}\n        valueLabelDisplay=\"auto\"\n        style={{ marginTop: '20px' }}\n      />\n    </div>\n  );\n}\n\nexport default App;*/","map":{"version":3,"names":[],"sources":["/home/liwia/scripts/personal/data-analysis/src/App.js"],"sourcesContent":["/*import React, { useState } from 'react';\nimport { Scatter } from 'react-chartjs-2';\nimport Slider from '@mui/material/Slider';\nimport { Chart as ChartJS, ScatterController, LinearScale, PointElement, Tooltip } from 'chart.js';\n\n// Register necessary Chart.js components\nChartJS.register(ScatterController, LinearScale, PointElement, Tooltip);\n\n// Example dataset (index 0 is the earliest, index n is the latest)\nconst data = [\n  { x: 1, y: 2 },\n  { x: 2, y: 3 },\n  { x: 3, y: 1 },\n  { x: 4, y: 5 },\n  { x: 5, y: 3 },\n  { x: 6, y: 4 },\n];\n\nfunction App() {\n   // Track the current time index for the slider\n   const [timeIndex, setTimeIndex] = useState(0);\n\n   // Update scatter plot data based on the current time index\n   const scatterData = {\n     datasets: [\n       {\n         label: 'Scatter Plot',\n         data: data.slice(0, timeIndex + 1), // Show points up to the selected time index\n         backgroundColor: 'rgba(75, 192, 192, 1)',\n       },\n     ],\n   };\n \n   const handleSliderChange = (event, newValue) => {\n     setTimeIndex(newValue);\n   };\n\n   return (\n    <div style={{ width: '600px', margin: '0 auto' }}>\n      <h2>Interactive Scatter Plot with Time Slider</h2>\n      <Scatter data={scatterData} options={{ scales: { x: { beginAtZero: true }, y: { beginAtZero: true } } }} />\n      <Slider\n        value={timeIndex}\n        onChange={handleSliderChange}\n        aria-labelledby=\"time-slider\"\n        step={1}\n        min={0}\n        max={data.length - 1}\n        valueLabelDisplay=\"auto\"\n        style={{ marginTop: '20px' }}\n      />\n    </div>\n  );\n}\n\nexport default App;*/\n\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}